@model HCL.Academy.Model.TrainingMaster

@{
    ViewBag.Title = "Create";
}
@{
    List<string> listSkillType = new List<string>();
    listSkillType.Add("Professional Skills");
    listSkillType.Add("Soft Skills");

    List<string> listCategory = new List<string>();
    listCategory.Add("Internal");
    listCategory.Add("External");

}
<div id="body">
    <section class="content-wrapper main-content clear-fix container">
        <ul class="breadcrumb">
            <li>@Html.ActionLink("Training List", "Index")</li>
            <li class="active">Add Training</li>
        </ul>
        <div class="row">
            <div class="col-md-12"><h2>Add Training</h2></div>
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.title, "Title", htmlAttributes: new { @class = "control-label" })
                        <span style="color:red">*</span>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.description, "Description", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.skillType, "Skill Type", htmlAttributes: new { @class = "control-label" })
                        <span style="color:red">*</span>
                    </div>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.skillType, new SelectList(listSkillType), "Please select Skill Type", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.skillType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.trainingCategory, "Training Category", htmlAttributes: new { @class = "control-label" })
                        <span style="color:red">*</span>
                    </div>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.trainingCategory, new SelectList(listCategory), "Select a Training Category", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.trainingCategory, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.trainingLink, "Training Link", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.trainingLink, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.trainingLink, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2">
                        <label>Training Content</label> @*@Html.LabelFor(model => model.selectedContent, htmlAttributes: new { @class = "control-label" })*@

                    </div>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.selectedContent, new SelectList(Model.contents, "id", "title"), "Select Training Content", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.selectedContent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2">
                        <label>Training Document</label>@*@Html.LabelFor(model => model.trainingDocument, htmlAttributes: new { @class = "control-label" })*@
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.trainingDocument, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.trainingDocument, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                    <div class="col-md-10">
                        @if (ViewBag.Success != null)
                        {
                            if (ViewBag.Success == true)
                            {
                                <label style="color:green">Training Addition Successful</label>
                            }
                            else
                            {
                                <label style="color:red">Training Addition Failed</label>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </section>
</div>


