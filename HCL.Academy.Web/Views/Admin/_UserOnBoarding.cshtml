@model HCL.Academy.Model.UserOnBoarding
<div class="col-md-12">
    <div class="details-table table-responsive">
        <div style="border:thin" id="search-details">
            @* <h4>User: </h4>*@
            <input type="hidden" id="hdnUserId" value=@Html.Encode( Model.UserId) />
            <input type="hidden" id="hdnUserEmail" value=@Html.Encode( Model.Email) />
            <table class="table table-bordered admin-onbrdtble" id="tblUser">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>GEO</th>
                        <th>Role</th>
                        <th>EmployeeID</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Html.Encode(Model.Name)</td>
                        <td>@Html.Encode(Model.Email)</td>
                        @if (string.IsNullOrWhiteSpace(Model.CurrentGEO))
                        {
                            <td>
                                @Html.DropDownList("ddGEO", new SelectList(Model.GEOs, "Id", "Title"), "Please Select GEO",
                                                     new
                                                     {
                                                         @id = "ddGEO",
                                                         @class = "form-control"
                                                     })
                                <span class="error" id="GEOError" style="display:none; margin-left: 10px;">GEO is required</span>
                            </td>
                        }
                        else
                        {
                            <td>@Html.Encode(Model.CurrentGEO)</td>
                        }
                                        @if (string.IsNullOrWhiteSpace(Model.CurrentRole))
                        {
                            <td>
                                @Html.DropDownList("ddRole", new SelectList(Model.Roles, "Id", "Title"), "Please Select Role",
                                                     new
                                                     {
                                                         @id = "ddRole",
                                                         @class = "form-control"
                                                     })
                                <span class="error" id="RoleError" style="display:none; margin-left: 10px;">Role is required</span>
                            </td>
                        }
                        else
                        {
                            <td>@Html.Encode(Model.CurrentRole)</td>

                            }
                            <td>@Html.TextBox("txtEmployeeID", null, new { @class = "form-control" })</td>
                    </tr>
                </tbody>
            </table>
            <div id="dvPrimarySkill">
                <table class="table table-bordered admin-onbrdtble" id="tblSkill">
                    <thead>
                        <tr>
                            <th>Primary Skill</th>
                            <th>Competency Level</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            @if (string.IsNullOrWhiteSpace(Model.CurrentSkill))
                                    {
                                <td>
                                    @Html.DropDownList("ddSkillOnBoard", new SelectList(Model.Skills, "SkillId", "SkillName"), "Please Select Skill",
                                                    new
                                                    {
                                                        @id = "ddSkillOnBoard",
                                                        @class = "form-control"
                                                    })
                                    <span class="error" id="SkillError" style="display:none; margin-left: 10px;">Skill is required</span>
                                </td>
                            }
                            else
                            {
                                <td><div id="dvCurrentSkill">@Html.Encode(Model.CurrentSkill)</div> </td>
                            }
                                            @if (string.IsNullOrWhiteSpace(Html.Encode(Model.CurrentCompetance)))
                                        {
                                <td>
                                    @Html.DropDownList("ddCompetenceOnBoard", new SelectList(Enumerable.Empty<SelectListItem>(), "CompetenceId", "CompetenceName"), "Please Select Competence",
                                                  new
                                                  {
                                                      @id = "ddCompetenceOnBoard",
                                                      @class = "form-control"
                                                  })
                                    <span class="error" id="CompetenceError" style="display:none; margin-left: 10px;">Competence is required</span>
                                </td>
                            }
                            else
                            {
                                <td>@Html.Encode(Model.CurrentCompetance)</td>
                                            }
                        </tr>
                    </tbody>
                </table>
            </div>
            <div id="dvRoleSkills">
                <div style="float:left">Role Based Skills : </div>
                <table class="table table-bordered admin-onbrdtble" id="tblRoleSkills">
                    <thead>
                        <tr>
                            <th>Skill Name</th>
                            <th>Actual Competency</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            @if (!Model.IsPresentInOnBoard)
                                        {
                <input type="button" id="btnOnBoardUser" class="sta-adminbt" onclick="OnBoardUser()" value="Save" />
            }
            else
            {
                <input type="button" id="btnOnBoardUser" class="sta-adminbt" onclick="OnBoardUser()" value="Save" disabled="disabled" />
            }
        </div>
        <div id="divUserOnBoardLoader"></div>
        <br />

        <div id="dvOnBoardingSkills">
            <div style="float:left">Manage Skills for User : </div>
            <table class="table table-bordered admin-onbrdtble" id="tblOnBoardingSkills">
                <thead>
                    <tr>
                        <th>Skill Name</th>
                        <th>Competency</th>
                        <th>Last Day Completion</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
            <div style="float:left" id="dvAdditionalSkill">
                Add Additional Skills :
                <table class="table table-bordered admin-onbrdtble">
                    <thead>
                        <tr>
                            <th>Skill</th>
                            <th>Competency</th>
                            <th>IsMandatory</th>
                            <th>Last Day Of Completion</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tr>
                        <td>
                            @Html.DropDownList("ddAddSkill", new SelectList(ViewBag.Skills, "SkillId", "SkillName"), "Please Select Skill",
                                     new
                                     {
                                         @id = "ddAddSkill",
                                         @class = "form-control"

                                     })
                        </td>
                        <td>
                            @Html.DropDownList("ddAddCompetence", new SelectList(Enumerable.Empty<SelectListItem>(), "CompetanceId", "CompetanceName"), "Please Select Competency Level",
                           new
                           {
                               @id = "ddAddCompetence",
                               @class = "form-control"
                           })
                        </td>
                        <td style="text-align:center"><input id="IsMandatoryNew" type="checkbox" /></td>
                        <td><input id="dtLastDayCompletionAddSkill" type="text" class="form-control form_datetime" /></td>
                        <td> <input id="lastDate" type="hidden" /><input type="button" id="btnAddSkill" class="sta-adminbt" onclick="AddUserSkill()" value="Add" /></td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="modal fade" id="popup-EditOnboarding" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="modal-close-Adduser"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">Edit OnBoarding Details</h4>
                    </div>
                    <div class="modal-body">

                        <table>
                            <tr>
                                <td>Email: </td>
                                <td>@Html.Encode(Model.Email)</td>
                            </tr>
                            <tr>
                                <td>Skill: </td>
                                <td>
                                    @Html.DropDownList("ddSkillOnBoardEdit", new SelectList(Model.Skills, "SkillId", "SkillName"), "Please Select Skill",
                                                new
                                                {
                                                    @id = "ddSkillOnBoardEdit",
                                                    @class = "form-control"
                                                })
                                </td>
                            </tr>
                            <tr>
                                <td>Competence: </td>
                                <td>
                                    @Html.DropDownList("ddCompetanceOnBoardEdit", new SelectList(Model.Competence, "CompetenceId", "CompetenceName"), "Please Select Competence",
                                                new
                                                {
                                                    @id = "ddCompetanceOnBoardEdit",
                                                    @class = "form-control"
                                                })
                                </td>
                            </tr>
                            <tr>
                                <td>Status: </td>
                                <td>
                                    @Html.DropDownList("ddStatusOnBoardEdit", new SelectList(Model.Status, "StatusId", "StatusName"), "Please Select Status",
                                                new
                                                {
                                                    @id = "ddStatusOnBoardEdit",
                                                    @class = "form-control",

                                                })
                                </td>
                            </tr>

                        </table>

                        <input type="button" id="btnEditOnBoard" onclick="EditOnBoard()" value="Submit" />
                    </div>

                </div>
            </div>
        </div>
        <div style="display:none" class="hiddenItems">
            <input type="hidden" id="roleskills" />
        </div>
    </div>
</div>

@*<script src="~/Scripts/bootstrap-datetimepicker.min.js" charset="UTF-8"></script>*@
@*<script src="~/Scripts/jquery.min.1.12.4.js"></script>*@
@*<link href="~/Scripts/lib/bootstrap-datepicker.css" rel="stylesheet" />
    <script src="~/Scripts/lib/bootstrap-datepicker.js"></script>*@
<script src="~/Scripts/bootstrap-datepicker.js"></script>
<link href="~/Content/bootstrap-datepicker.css" rel="stylesheet" />

<script type="text/javascript">

    $(document).ready(function () {
        $("#dvPrimarySkill").css('display', 'none');
        $("#dvOnBoardingSkills").css('display', 'none');
        $("#dvAdditionalSkill").css('display', 'none');
        $("#dvRoleSkills").css('display', 'none');
        $('#dtLastDayCompletionAddSkill').datepicker({
            format: 'yyyy-mm-dd',
            todaybtn: true,
            autoclose: true,
            todayhighlight: true,
            pickerPosition: "bottom-left"
        });
        $('#dvOnBoardingSkills').hide();
        FillCompetenceBySkillName();
        // Validate Skill
        $("#ddSkillOnBoard").on("change", function () {
            var input = $(this);
            var is_name = input.val();
            if (is_name) {
                input.removeClass("invalid").addClass("valid");
                input.css('border', '2px solid green');
                $("#SkillError").css('display', 'none');
                var skillId = $('#ddSkillOnBoard').val();
                FillCompetence(skillId, "#ddCompetenceOnBoard");
            }
            else {
                input.removeClass("valid").addClass("invalid");
                input.css('border', '2px solid red');
                $("#SkillError").css('display', 'block');
            }
        });
        $("#ddRole").on("change", function () {
            
            var id = $('#ddRole').val();

            var PostData = { roleId: id };
            var tableBody = $('#tblRoleSkills tbody');

            var resultStr = "";
            $.ajax({
                type: "POST",
                url: "/ManageRoles/GetRoleSkill",
                contentType: "application/json;",
                dataType: "",
                data: JSON.stringify(PostData)
                ,
                success: function (result) {
                    $('#roleskills').val(result.length);
                    if (result.length > 0) {
                     
                        $("#dvPrimarySkill").css('display', 'none');
                        $("#dvOnBoardingSkills").css('display', 'none');
                        $("#dvAdditionalSkill").css('display', 'none');                        
                        $("#dvRoleSkills").css('display', 'block');
                        var count = 0;
                        $.each(result,
                            function (key, value) {
                              
                                var hiddenskillid = "hdskill" + count;
                                var hiddenskillvalue = "skillvalue" + count;
                                resultStr = resultStr + "<tr><td>" + "<input type='hidden' id='" + hiddenskillid + "' value=" + value.SkillId + " /><div id='" + hiddenskillvalue +"'>"+ value.Skill + "</></td>" + "<td>";
                                resultStr = resultStr + "<select id='ddCompetency_" + count + "'>";
                                //resultStr += "<option value=''>Please Select Competency Level</option>";

                                $.each(value.ValidCompetencies, function (i, competence) {
                                    if (competence.CompetenceName != "All") {
                                        resultStr = resultStr + "<option value='" + competence.CompetenceId + "'>" + competence.CompetenceName + "</option>";
                                    }
                                });

                                resultStr = resultStr + "</select>" + "</td></tr>";
                                count = count + 1;
                            }
                        )

                        tableBody.html(resultStr);

                    }
                    else
                    {
                        $("#dvPrimarySkill").css('display', 'block');
                        //$("#dvOnBoardingSkills").css('display', 'block');
                        //$("#dvAdditionalSkill").css('display', 'block');
                        $("#dvRoleSkills").css('display', 'none');

                    }
                   
                }



            });
        });
        $("#ddAddSkill").on("change", function () {
            var input = $(this);
            var is_name = input.val();
            if (is_name) {
                input.removeClass("invalid").addClass("valid");
                input.css('border', '2px solid green');
                $("#SkillError").css('display', 'none');
                var skillId = $('#ddAddSkill').val();
                FillCompetence(skillId, "#ddAddCompetence");
            }
            else {
                input.removeClass("valid").addClass("invalid");
                input.css('border', '2px solid red');
                $("#SkillError").css('display', 'block');
            }
        });
        // Validate Competence
        $("#ddCompetenceOnBoard").on("change", function () {
            var input = $(this);
            var is_name = input.val();
            if (is_name) {
                input.removeClass("invalid").addClass("valid");
                input.css('border', '2px solid green');
                $("#CompetenceError").css('display', 'none');
            }
            else {
                input.removeClass("valid").addClass("invalid");
                input.css('border', '2px solid red');
                $("#CompetenceError").css('display', 'block');
            }
        });

        $("#ddGEO").on("change", function () {
            var input = $(this);
            var is_name = input.val();
            if (is_name) {
                input.removeClass("invalid").addClass("valid");
                input.css('border', '2px solid green');
                $("#GEOError").css('display', 'none');
            }
            else {
                input.removeClass("valid").addClass("invalid");
                input.css('border', '2px solid red');
                $("#GEOError").css('display', 'block');
            }
        });

    });
    function ShowOnBoardingSkills(email) {

        var tableBody = $('#tblOnBoardingSkills tbody');
        tableBody.html("");
        //$('#dvUserId').html(id);
        //$('#hdUserId').html(id);

        $('#dvOnBoardingSkills').show();
        var PostData = {
            userEmail: email
        };

        $.ajax({
            type: "POST",
            url: "/Admin/GetSkillsByEmail",
            contentType: "application/json;",
            dataType: "",
            data: JSON.stringify(PostData),
            success: function (result) {
                $.each(result, function (key, value) {

                    var dropdownid = "ddlCompetencyEdit" + value.Id;
                    var divid = "dv" + value.Id;
                    var saveid = "save" + value.Id;
                    var editid = "edit" + value.Id;
                    var deleteid = "delete" + value.Id;
                    var editdateid = "date" + value.Id;

                    var competencies = value.SkillwiseCompetencies.split('|');
                    var competencyIds = value.SkillwiseCompetencyIds.split('|');

                    var resultStr = "<tr><td>" + value.Skill + "</td><td><div id='" + divid + "' data-ts='" + value.CompetenceId + "'>" + value.Competence + "</div>"
                        + "<select id='" + dropdownid + "' style='display:none' >";

                    resultStr += "<option value=''>Please Select Competency Level</option>";
                    for (var i = 0, l = competencies.length; i < l; i++) {
                        resultStr = resultStr + "<option value='" + competencyIds[i] + "'>" + competencies[i] + "</option>";
                    }

                    resultStr = resultStr + "</select>" + "</td>" +
                        "<td><input style='display:none' class='completionDate' id='" + editdateid + "' type='text' class='form-control form_datetime'/></td>" +
                        "<td>" + "<a  id='" + editid + "' href='#' onclick='ShowEdit(" + value.Id + ")'>Edit</a>" + "<a href='#' id='" + saveid + "' style='display:none'  onclick='UpdateSkill(" + value.Id + ")'>Save</a>" + "</td>" +
                        "<td>" + "<a  id='" + deleteid + "' href='#' onclick='RemoveUserSkill(" + value.Id + ")'>Delete</a>" + "</td>" + "</tr>";
                    tableBody.append(resultStr);
                });

                $('.completionDate').datepicker({
                    format: 'yyyy-mm-dd',
                    todaybtn: true,
                    autoclose: true,
                    todayhighlight: true,
                    pickerPosition: "bottom-left"
                });

            }
        });

    }
    function EditOnBoardItem() {
        $("#popup-EditOnboarding").modal('show');
    }
    Number.isInteger = Number.isInteger || function (value) {
        return typeof value === "number" &&
            isFinite(value) &&
            Math.floor(value) === value;
    };
    function OnBoardUser() {
       
        var empIdVal = $("#txtEmployeeID").val();
        var empId = 0;
        if(empIdVal.length == 0)
        {
            alert("Please enter employee id");
            return;
        }
        else
        {
            empId = parseInt(empIdVal);
            if(!Number.isInteger(empId))
            {
                alert("Please enter positive integer value for employee id"); return;
            }
        }
        
        var roleskillcount =parseInt( $('#roleskills').val());

        var roleskills = [];
        var roleskillcompetency = [];
        var roleskillname = [];
        var roleskillcompetencyname = []

        for(var i = 0; i < roleskillcount; i++)
        {
            var skillvaluefield = "skillvalue" + i;
            var skillidfield = 'hdskill' + i;
            var skillid = $("#" +skillidfield).val();
            roleskills[i] = skillid;
            var competencyfield = "ddCompetency_" + i;
            var competencyvalue = $("#" + competencyfield + " :selected").val();
            roleskillcompetencyname[i] = $("#" + competencyfield).children("option").filter(":selected").text();
            roleskillcompetency[i] = competencyvalue;
            roleskillname[i] = $("#"+skillvaluefield).html();
        }
        //hdskill
        if (roleskillcount == 0) {
            if ($("#ddCompetenceOnBoard")[0].selectedIndex == 0 || $("#ddSkillOnBoard")[0].selectedIndex == 0) {
                alert('Please select skill and competence');
                return;
            }
        }
        var isValid = true;
        if (roleskillcount == 0) {
            var valid1 = $("#ddSkillOnBoard").hasClass("valid");
            if (!valid1) {
                isValid = false;
                $("#ddSkillOnBoard").css('border', '2px solid red');
                $("#SkillError").css('display', 'block');
            }
        }
        if (roleskillcount == 0) {
            var valid2 = $("#ddCompetenceOnBoard").hasClass("valid");
            if (!valid2) {
                isValid = false;
                $("#ddCompetenceOnBoard").css('border', '2px solid red');
                $("#CompetenceError").css('display', 'block');
            }
        }

        var valid3 = $("#ddGEO").hasClass("valid");
        if (!valid3) {
            isValid = false;
            $("#ddCompetenceOnBoard").css('border', '2px solid red');
            $("#CompetenceError").css('display', 'block');
            $("#GEOError").css('display', 'block');
        }

        if (isValid) {

            if (roleskillcount == 0) {
                $("#divUserOnBoardLoader").html(" <img src='/Images/loading_01.gif' class='loader-img loader-position' />");
                var PostData = {
                    competence: $("#ddCompetenceOnBoard :selected").val(),
                    competenceName: $("#ddCompetenceOnBoard").children("option").filter(":selected").text(),
                    skillId: $("#ddSkillOnBoard").val(),
                    skillName: $("#ddSkillOnBoard").children("option").filter(":selected").text(),
                    userId: $("#hdnUserId").val(),
                    email: $("#hdnUserEmail").val(),
                    geo: $("#ddGEO").val(),
                    roleId: $("#ddRole").val(),
                    rolebasedskillcount: roleskillcount,
                    employeeId: empId
                };

                $.ajax({
                    type: "POST",
                    url: "/Admin/OnBoardUser",
                    contentType: "application/json;",
                    dataType: "",
                    data: JSON.stringify(PostData),
                    success: function (result) {
                        if (result) {
                            $("#btnOnBoardUser").attr('disabled', 'disabled');
                            $("#divUserOnBoardLoader").html("<h3>" + result + "</div>");
                            ShowOnBoardingSkills($("#hdnUserEmail").val());
                        }
                        else {
                            $("#btnOnBoardUser").attr('disabled', 'disabled');
                            $("#divUserOnBoardLoader").html("<h3>" + result + "</div>");
                        }
                    }
                });
            }
            else
            {  
                var PostData = {
                    competence: roleskillcompetency[0],
                    competenceName: roleskillcompetencyname[0] ,
                    skillId: roleskills[0],
                    skillName: roleskillname[0] ,
                    userId: $("#hdnUserId").val(),
                    email: $("#hdnUserEmail").val(),
                    geo: $("#ddGEO").val(),
                    roleId: $("#ddRole").val(),
                    rolebasedskillcount: roleskillcount,
                    employeeId: empId
                };
                var flag = false;
                $.ajax({
                    type: "POST",
                    url: "/Admin/OnBoardUser",
                    contentType: "application/json;",
                    dataType: "",
                    data: JSON.stringify(PostData),
                    success: function (result) {
                        if (result.length > 0)
                        { 
                                var lastday = new Date();
                                lastday.setMonth(lastday.getMonth() + 1);                             
                                for (var j = 1; j < roleskillcount; j++) {

                                    var PostData = {
                                        email: $("#hdnUserEmail").val(),
                                        userId: $("#hdnUserId").val(),
                                        skillId: roleskills[j],
                                        skillName: roleskillname[j],                            
                                        competenceid: roleskillcompetency[j],
                                        competence: roleskillcompetencyname[j],
                                        ismandatory: 'false',
                                        lastdayofcompletion: lastday,
                                        roleId: $("#ddRole").val()

                                    };


                                    $.ajax({
                                        type: "POST",
                                        url: "/Admin/AddSkill",
                                        contentType: "application/json;",
                                        dataType: "",
                                        data: JSON.stringify(PostData),
                                        success: function (result1) {
                                           // ShowOnBoardingSkills(email);
                                        }
                                    });
                                }
                            
                            $("#btnOnBoardUser").attr('disabled', 'disabled');
                            $("#divUserOnBoardLoader").html("<h3>" + result + "</div>");
                           // ShowOnBoardingSkills($("#hdnUserEmail").val());
                            
                        }
                        else {
                            $("#btnOnBoardUser").attr('disabled', 'disabled');
                            $("#divUserOnBoardLoader").html("<h3>" + result + "</div>");
                        }
                    }
                });

              
            }
        }
    }
    function FillCompetence(skillId, ddCompetence) {

        $.ajax({

            url: "/Admin/FillCompetence",
            type: "GET",
            dataType: "JSON",
            data: { Id: skillId },
            success: function (competencies) {
                $(ddCompetence).html("");
                $(ddCompetence).append($('<option></option>').val('Please Select Competency Level').html('Please Select Competency Level'));
                $.each(competencies, function (i, competence) {
                    if (competence.CompetenceName != "All") {
                        $(ddCompetence).append(
                            $('<option></option>').val(competence.CompetenceId).html(competence.CompetenceName));
                    }
                });
            }
        });

    }
    function FillCompetenceBySkillName() {


        if ($("#dvCurrentSkill").html() != null) {

            var skillName = $("#dvCurrentSkill").html();

            $.ajax({

                url: "/Admin/FillCompetenceBySkillName",

                type: "GET",

                dataType: "JSON",

                data: { name: skillName },

                success: function (competencies) {

                    $("#ddCompetenceOnBoard").html(""); // clear before appending new list
                    $("#ddCompetenceOnBoard").append($('<option></option>').val('Please Select Competency Level').html('Please Select Competency Level'));

                    $.each(competencies, function (i, competence) {
                        if (competence.CompetenceName != "All") {
                            $("#ddCompetenceOnBoard").append(
                                $('<option></option>').val(competence.CompetenceId).html(competence.CompetenceName));
                        }
                    });
                }

            });

        }



    }
    function EditOnBoard() {
        var skill = $("#ddSkillOnBoardEdit").val();
        var competence = $("#ddCompetenceOnBoard :selected").val();
        var userId = $("#hdnUserId").val();

        var skill = { SkillId: $("#ddSkillOnBoardEdit").val(), SkillName: $("#ddSkillOnBoardEdit :selected").text() };
        var skills = [];

        skills.push(skill);

        var objOnboard = {
            UserId: $("#hdnUserId").val(),
            Skills: skills,
            CurrentCompetance: $("#ddCompetanceOnBoardEdit :selected").val(),
            CurrentStatus: $("#ddStatusOnBoardEdit :selected").text(),
            CurrentProfileSharing: $("#ddProfileOnBoardEdit :selected").text(),
            CurrentBGVStatus: $("#ddBGVStatusOnBoardEdit :selected").text()
        }


        var PostData = {
            objUserOnboard: objOnboard
        };

        $.ajax({
            type: "POST",
            url: "/Admin/EditOnBoardUser",
            contentType: "application/json;",
            dataType: "",
            data: JSON.stringify(PostData),
            success: function (result) {
                alert(result);
            }
        });
    }
    function AddUserSkill() {

        if ($("#ddAddCompetence")[0].selectedIndex == 0 || $("#ddAddSkill")[0].selectedIndex == 0) {
            alert('Please select skill and competence');
            return;
        }
        if ($('#dtLastDayCompletionAddSkill').val() == "" || $('#dtLastDayCompletionAddSkill').val() == 'undefined' || $('#dtLastDayCompletionAddSkill').val() == undefined || $('#dtLastDayCompletionAddSkill').val() == null) {
            alert('Please set the last day of completion');
            return;
        }
        var email = $("#hdnUserEmail").val();
        var id = $('#dvUserId').html();
        var PostData = {
            userEmail: email
        };

        var selectedSkill = $("#ddAddSkill").val();

        $.ajax({
            type: "POST",
            url: "/Admin/GetSkillsByEmail",
            contentType: "application/json;",
            dataType: "",
            data: JSON.stringify(PostData),
            success: function (result) {

                var result = jQuery.grep(result, function (n, i) {
                    return (n.SkillId == selectedSkill);
                });
                if (result.length > 0) {
                    alert("The skill you have selected is already assigned to user. You can only edit the competency level for this skill.");
                }
                else {
                    AddSkill(email);
                }
            }
        });
    }
    function AddSkill(email) {
        if ($("#ddAddCompetence")[0].selectedIndex == 0 || $("#ddAddSkill")[0].selectedIndex == 0) {
            alert('Please select skill and competence');
            return;
        }
        var date = $("#dtLastDayCompletionAddSkill").val();
        $('#lastDate').val(date);
        var PostData = {
            competenceid: $("#ddAddCompetence :selected").val(),
            competence: $("#ddAddCompetence").children("option").filter(":selected").text(),
            skillId: $("#ddAddSkill").val(),
            skillName: $("#ddAddSkill").children("option").filter(":selected").text(),
            email: email,
            ismandatory: $('#IsMandatoryNew').prop('checked'),
            lastdayofcompletion: $("#dtLastDayCompletionAddSkill").val(),
            roleId: '0'

        };

        console.log(JSON.stringify(PostData));
        $.ajax({
            type: "POST",
            url: "/Admin/AddSkill",
            contentType: "application/json;",
            dataType: "",
            data: JSON.stringify(PostData),
            success: function (result) {
                ShowOnBoardingSkills(email);
            }
        });

    }
    function RemoveUserSkill(id) {
        debugger;
        var PostData = {
            itemId: id,
            userId: '0',
            emailId: $("#hdnUserEmail").val()
        };
        console.log(PostData);
        $.ajax({
            type: "POST",
            url: "/Admin/RemoveUserSkill",
            contentType: "application/json;",
            dataType: "",
            data: JSON.stringify(PostData),
            success: function (result) {
                ShowOnBoardingSkills($("#hdnUserEmail").val());
            }
        });
    }
    function UpdateSkill(id) {
        
        var dropdownid = "ddlCompetencyEdit" + id;
        var divid = "dv" + id;
        var saveid = "save" + id;
        var editid = "edit" + id;
        var editdateid = "date" + id;
        var isCompetenceChanged = false;
        if ($("#dvCurrentSkill").html() != null) {

            var selectedSkill = $("#dvCurrentSkill").html();
        }
        if ($('#' + editdateid).val() == null) {
            return;
        }
        if ($('#' + editdateid).val() == "" || $('#' + editdateid).val() == 'undefined' || $('#' + editdateid).val() == undefined || $('#' + editdateid).val() == null) {
            alert('Please set the last day of completion');
            return;
        }
        isCompetenceChanged = $("#" + dropdownid)[0].selectedIndex == 0 ? false : true;
        console.log(isCompetenceChanged);
        var PostData = {
            itemId: id,
            skill: selectedSkill,
            competence: isCompetenceChanged == true ? document.getElementById(dropdownid).value : $('#' + divid).attr("data-ts"),
            userId: '0',
            emailId: $("#hdnUserEmail").val(),
            completiondate: $('#' + editdateid).val(),
            isCompetenceChanged: isCompetenceChanged
        };

        $.ajax({
            type: "POST",
            url: "/Admin/UpdateUserSkill",
            contentType: "application/json;",
            dataType: "",
            data: JSON.stringify(PostData),
            success: function (result) {
                ShowOnBoardingSkills($("#hdnUserEmail").val());
            }
        });
    }
    function ShowEdit(id) {
        $('#tblSkills th:nth-child(3)').show(); $('#tblSkills td:nth-child(3)').show();
        var dropdownid = "ddlCompetencyEdit" + id;
        var divid = "dv" + id;
        var saveid = "save" + id;
        var editid = "edit" + id;
        var editdateid = "date" + id;
        document.getElementById(dropdownid).style.display = 'block';
        document.getElementById(saveid).style.display = 'block';
        document.getElementById(divid).style.display = 'none';
        document.getElementById(editid).style.display = 'none';
        document.getElementById(editdateid).style.display = 'block';
    }
</script>
