@model HCL.Academy.Model.ExternalUser
@{
    ViewBag.Title = "Create";

}
<div id="body">
    <section class="content-wrapper main-content clear-fix container">
        <ul class="breadcrumb">
            <li>@Html.ActionLink("External User List", "Index")</li>
            <li class="active">Register User</li>
        </ul>
        <div class="row">
            <div class="col-md-12"><h2>Register External User</h2></div>
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.UserName, "Email Address", htmlAttributes: new { @class = "control-label" })
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GroupId, new SelectList(ViewBag.lstGroups, "Id", "Name"), "Please select an Group", new { @id = "ddGroup", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.OrganizationID, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.OrganizationID, new SelectList(ViewBag.lstOrganizations, "Id", "Name"), "Please select an Organization", new { @id = "ddOrg", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OrganizationID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.SkillId, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SkillId, new SelectList(ViewBag.Skills, "SkillId", "SkillName"), "Please select an skill", new { @id = "ddSkill", @class = "form-control", @onchange = "FillCompetencePopup()" })
                    @Html.ValidationMessageFor(model => model.SkillId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.CompetencyLevelId, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CompetencyLevelId, new SelectList(ViewBag.CompetenceList, "CompetenceId", "CompetenceName"), "Please select an competence", new { @id = "ddCompetence", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CompetencyLevelId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.GEOId, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GEOId, new SelectList(ViewBag.GEOs, "Id", "Title"), "Please select an GEO", new { @id = "ddGEO", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GEOId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.RoleId, new SelectList(ViewBag.Roles, "Id", "Title"), "Please select an Role", new { @id = "ddRole", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label" })
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2"></div>
                <div class="col-md-10"><input type="submit" value="Submit" class="btn btn-default" /></div>
            </div>
            <div class="row form-group">
                <div class="col-md-offset-2 col-md-12">
                    <div style="color:red"><b>@Html.Raw(TempData["msg"])</b></div>
                </div>
            </div>
        </div>
        }


    </section>
</div>


<script>
    $(document).ready(function () {

    });

    function FillCompetencePopup() {
        var skillId = $('#ddSkill').val();
        $.ajax({
            url: "/Admin/FillCompetence",
            type: "GET",
            dataType: "JSON",
            data: { Id: skillId },
            success: function (competencies) {
                $("#ddCompetence").html(""); // clear before appending new list
                $("#ddCompetence").append($('<option></option>').val('Please Select Competency Level').html('Please Select Competency Level'));
                $.each(competencies, function (i, competence) {

                    $("#ddCompetence").append(

                        $('<option></option>').val(competence.CompetenceId).html(competence.CompetenceName));
                });
            }
        });
    }
</script>